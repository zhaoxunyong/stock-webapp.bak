<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.stock.fetch.dao.StockHistoryErrorMapper" >
  <resultMap id="BaseResultMap" type="org.stock.fetch.model.StockHistoryError" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="no" property="no" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from stock_history_error
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <delete id="deleteByDate" parameterType="org.stock.fetch.model.StockHistoryError" >
    delete from stock_history_error
    where no = #{no,jdbcType=VARCHAR} and date BETWEEN #{startDate,jdbcType=TIMESTAMP} AND #{endDate,jdbcType=TIMESTAMP}
  </delete>
  <insert id="insert" parameterType="org.stock.fetch.model.StockHistoryError" useGeneratedKeys="true" keyProperty="id" >
    insert into stock_history_error (id, no, start_date, end_date, 
      status, create_date, update_date
      )
    values (#{id,jdbcType=BIGINT}, #{no,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, 
      #{status,jdbcType=TINYINT}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.stock.fetch.model.StockHistoryError" >
    update stock_history_error
    set id = #{id,jdbcType=BIGINT},
      no = #{no,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      status = #{status,jdbcType=TINYINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, no, start_date, end_date, status, create_date, update_date
    from stock_history_error
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAllByStatus" resultMap="BaseResultMap" >
    select id, no, start_date, end_date, status, create_date, update_date
    from stock_history_error where status = #{status,jdbcType=TINYINT}
  </select>
</mapper>